# .github/workflows/python-quality.yml

name: Python Code Quality

on:
  # Запускати workflow при кожному push до гілок `main` та `master`
  # та при кожному відкритті/оновленні pull request
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    runs-on: ubuntu-latest # Використовуємо віртуальну машину Ubuntu на GitHub
    strategy:
      # Можна перевіряти на кількох версіях Python
      # Наприклад, matrix: {python-version: ["3.8", "3.9", "3.10"]}
      # Але для Black/isort/Flake8 зазвичай достатньо однієї версії
      matrix:
        python-version: ["3.10"] # Вкажіть версію Python, яку використовує ваш проект

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Отримує код репозиторію на runner'і

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5 # Налаштовує вказану версію Python
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Кешує залежності pip для прискорення наступних запусків

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Встановлюємо black, isort, flake8
        pip install black isort flake8

    # --- Перевірка Black ---
    - name: Run Black (Check only)
      run: black --check .
      # Якщо black знайде несформатовані файли, цей крок завершиться з помилкою,
      # і workflow не буде успішним.

    # --- Перевірка isort ---
    - name: Run isort (Check only)
      run: isort --check-only .
      # Аналогічно, якщо isort знайде невідсортовані імпорти, крок завершиться з помилкою.

    # --- Перевірка Flake8 ---
    - name: Run Flake8
      run: flake8 .
      # Flake8 перевіряє на стилістичні помилки та потенційні баги.